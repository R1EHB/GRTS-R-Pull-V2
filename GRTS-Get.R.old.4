# GRTS JSON Test #


## Set BaseURL ##
BaseURL <- "https://ofmpub.epa.gov/apex/grts_rest/GetProjectsByHUC12/"

## Set a little test set of HUC12 ##

 myHUC12Vector <- c("020503030802", "020503030803","171100190303")

# myHUC12Vector <- c("020503030803")

## Load Libraries ##
library(httr)
library(jsonlite)
library(data.table)


## Create a data-less list template for the list data returned by fromJSON and GRTS ##



### Coarse GRTS Data Structure ###
### Right from URL; not converted ###


# X
# x
# X.ref (chr) {(URL API)etc}
# items.state (chr)
# items.prj_seq (int)
# items.prj_title (chr)
# items.total_319_funds (chr) {Need to convert to int or float}
# items.description (chr)
# items.will_has_load_reductions_ind (chr) {need to convert to boolean}
# items.project_type (chr)
# items.huc_8 (chr)
# items.huc_12 (chr)
# items.pollutants (chr)
# items.statewide_ind (chr) {need to convert to boolean}
# items.project_start_date (chr) {need to convert to date}
# items.project_link (chr)
# items.status (chr)
# items.ws_protect_ind (chr)
# items.watershed_plans (chr) 

vec_len <- length (myHUC12Vector)







## Loop through all the HUC12 in the vector for pulling ##
### For the first element, simply copy the jSON data to the coarseGRTS List ###
### For the second to n elements, append the coarseGRTS List ###

### Note that the coarseGRTS list has been initialized with what is known to be the full ###

## Loop over the HUC12 values to retreive from GRTS

# -- This puts the information into a list, where the main list index is the position of the HUC12
# --- element above (1...n, where n=number of HUCs in the vector myHUC12Vector above)
# -- A dataframe is embedded in each list, and that dataframe has each project and info as an observation



for (i in 1:vec_len) {
    URL <- paste0(BaseURL, myHUC12Vector[i])
    raw_data <- GET (URL)
    temp <- fromJSON(rawToChar(raw_data$content), flatten = TRUE)
    if (i==1) {
       coarseGRTS <- temp
    }  else {
    	 coarseGRTS <- append (coarseGRTS,temp)
       }
}

str (coarseGRTS[2]$items$state)




## Migrate the list to a dataframe by looping over the main list index (length of myHUC12Vector)
# Odd numbered indexes have URL; Even numbered indexes have the data frame of observations


GRTS_DF <- data.frame (
	   state			= character(1),
	   prj_seq			= integer(1),		##	Project sequence number
	   prj_title 	  		= character(1),		## 	Project title
	   total_319_funds		= character(1),
	   description			= character(1),		##	Project description
	   will_has_load_reductions_ind = character(1), 		##      Project has load reductions??
	   project_type			= character(1),
	   huc_8			= character(1),
	   huc_12 			= character(1),
	   pollutants			= character(1),
	   statewide_ind 		= character(1),
	   project_start_date		= character(1),
	   project_link 		= character(1),
	   status 			= character(1),
	   ws_protect_ind 		= character(1),
	   watershed_plans 		= character(1),
	    stringsAsFactors=FALSE )

## Each HUC has two index entries, first one with API URL and the second with a "pointer" to the data frame with the data
## Need to loop from 1 to twice the number of HUC12s


a=vec_len*2
URL_vector <- vector (mode="character", length=vec_len)

j=1
for (i in 1:a) {
    if ((i%%2)!=0) { # Odds
       # copy the API URL into a holding vector
       URL_vector[j] <- as.character (coarseGRTS[i])
       j=j+1
    }
    if ((i%%2)==0) { # Evens
       if (i==2) { # If 2, then first one to be written so handle differently (not append)
            GRTS_tmp <- coarseGRTS[i]$items
	}
	if (i!=2) {
	   GRTS_tmp <- append (GRTS_tmp, coarseGRTS[i]$items)
	}
    }

}

# GRTS_DF <- as.data.frame (GRTS_DF)

	str (GRTS_tmp)
       print (GRTS_tmp)

## Write the file to CSV for checking ##
# cat(GRTS_DF, file="GRTS_DF.CSV")

q()




j=1
for (i in 1:a) {
    if (i%%2!=0) {
       if (i==1) {
       	  GRTS_DF$apiURL <- coarseGRTS[i]
	  
       } else {
            GRTS_DF <- coarseGRTS[i]
	    print (temp)
	    GRTS_DF <- temp
       }

    GRTS_DF[j]$apiURL <- coarseGRTS[i][1]
    } else if (i%%2==0) {
      GRTS_DF[j] <- as.data.frame(coarseGRTS[i]$items)
      }
      j=j+1
}

str(GRTS_DF)

## Write the file to CSV for checking ##
# write.csv(coarseGRTS_DF, file="CoarseGRTS_DF.CSV")

 warnings()

q()

